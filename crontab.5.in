.\" vim: tw=75
.\" Copyright (c) 1988,1990,1993,1994,2021 by Paul Vixie ("VIXIE")
.\" Copyright (c) 2004 by Internet Systems Consortium, Inc. ("ISC")
.\" Copyright (c) 1997,2000 by Internet Software Consortium, Inc.
.\"
.\" Permission to use, copy, modify, and distribute this software for any
.\" purpose with or without fee is hereby granted, provided that the above
.\" copyright notice and this permission notice appear in all copies.
.\"
.\" THE SOFTWARE IS PROVIDED "AS IS" AND VIXIE DISCLAIMS ALL WARRANTIES
.\" WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
.\" MERCHANTABILITY AND FITNESS.  IN NO EVENT SHALL VIXIE BE LIABLE FOR
.\" ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
.\" WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
.\" ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT
.\" OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
.\"
.\" $Id: crontab.5,v 1.6 2004/01/23 19:03:33 vixie Exp $
.\" 
.TH CRONTAB 5 "24 January 1994"
.UC 4
.SH NAME
crontab \- tables for driving svcron (based on Vixie Cron)
.SH DESCRIPTION
A \fIcrontab\fR file contains instructions for the \fBsvcron\fR (8) daemon
of the general form: ``run this command at this time on this date''. Each
user has their own crontab, and commands in any given crontab will be
executed as the user who owns the crontab.
.PP
Blank lines and leading spaces and tabs are ignored. Lines whose first
non-space character is a pound-sign (#) are comments, and are ignored.
Note that comments are not allowed on the same line as svcron commands, since
they will be taken to be part of the command.  Similarly, comments are not
allowed on the same line as environment variable settings.
.PP
An active line in a crontab will be either an environment setting or a svcron
command. An environment setting is of the form,
.PP
    name = value
.PP
where the spaces around the equal-sign (=) are optional, and any subsequent
non-leading spaces in \fIvalue\fR will be part of the value assigned to
\fIname\fR. The \fIvalue\fR string may be placed in quotes (single or
double, but matching) to preserve leading or trailing blanks.
.PP
Several environment variables are set up automatically by the
\fBsvcron\fR (8) daemon. \fBSHELL\fR is set to \fI/bin/sh\fR, and
\fBLOGNAME\fR and \fBHOME\fR are set from the \fI/etc/passwd\fR line of the
crontab's owner. \fBHOME\fR and \fBSHELL\fR may be overridden by settings
in the crontab; \fBLOGNAME\fR may not.
.PP
(Another note: the \fBLOGNAME\fR variable is sometimes called \fBUSER\fR on
BSD systems. On these systems, \fBUSER\fR will be set also.)
.PP
In addition to \fBLOGNAME\fR, \fBHOME\fR, and \fBSHELL\fR, \fBsvcron\fR (8)
will look at \fBMAILTO\fR if it has any reason to send mail as a result of
running commands in ``this'' crontab.  If \fBMAILTO\fR is defined (and
non-empty), mail is sent to the user so named.  If \fBMAILTO\fR is defined
but empty (\fBMAILTO\fR=""), no mail will be sent. Otherwise mail is sent
to the owner of the crontab. This option is useful if you decide on
/bin/mail instead of /usr/lib/sendmail as your mailer when you install
svcron -- /bin/mail doesn't do aliasing, and UUCP usually doesn't read its
mail.
.PP
The format of a svcron command is very much the V7 standard, with a number
of upward-compatible extensions.  Each line has five time and date fields,
followed by a user name if this is the system crontab file, followed by a
command. Commands are executed by \fBsvcron\fR (8) when the minute, hour,
and month of year fields match the current time, \fIand\fR when at least
one of the two day fields (day of month, or day of week) match the current
time (see ``Note'' below). \fBsvcron\fR (8) examines svcron entries once
every minute. The time and date fields are:
.IP
.ta 1.5i
field	allowed values
.br
-----	--------------
.br
minute	0-59
.br
hour	0-23
.br
day of month	1-31 (or $, see below)
.br
month	0-12 (or names, see below)
.br
day of week	0-7 (0 or 7 is Sun, or use names)
.br
.PP
A field may be an asterisk (*), which always stands for ``first\-last''.
.PP
Ranges of numbers are allowed.  Ranges are two numbers separated with a
hyphen. The specified range is inclusive. For example, 8-11 for an
``hours'' entry specifies execution at hours 8, 9, 10 and 11.
.PP
Lists are allowed.  A list is a set of numbers (or ranges) separated by
commas. Examples: ``1,2,5,9'', ``0-4,8-12''.
.PP
Step values can be used in conjunction with ranges. Following a range with
``/<number>'' specifies skips of the number's value through the range.  For
example, ``0-23/2'' can be used in the hours field to specify command
execution every other hour (the alternative in the V7 standard is
``0,2,4,6,8,10,12,14,16,18,20,22''). Steps are also permitted after an
asterisk, so if you want to say ``every two hours'', just use ``*/2''.
.PP
Names can also be used for the ``month'' and ``day of week'' fields.  Use
the first three letters of the particular day or month (case doesn't
matter). Ranges of names are not allowed.
.PP
The ``sixth'' field (the rest of the line) specifies the command to be run.
The entire command portion of the line, up to a newline or % character,
will be executed by /bin/sh or by the shell specified in the SHELL variable
of the crontab file. Percent-signs (%) in the command, unless escaped with
backslash (\\), will be changed into newline characters, and all data after
the first % will be sent to the command as standard input.
.PP
Note: The day of a command's execution can be specified by two
fields \(em day of month, and day of week.  If both fields are restricted
(i.e., are not *), the command will be run when \fIeither\fR field matches
the current time. For example,

.EX
``30 4 1,15 * 5''
.EE

would cause a command to be run at 4:30 am on the 1st and 15th of each
month, plus every Friday.
.PP
Note: The day-of-month can be given as $, in which case it matches the last
day of the current month.

.SH EXAMPLE SCHEDTAB FILE
.nf
# use /bin/sh to run commands, no matter what /etc/passwd says
SHELL=/bin/sh
# mail any output to `paul', no matter whose crontab this is
MAILTO=paul
#
# run five minutes after midnight, every day
5 0 * * *       $HOME/bin/daily.job >> $HOME/tmp/out 2>&1
# run at 2:15pm on the first of every month -- output mailed to paul
15 14 1 * *     $HOME/bin/monthly
# run at 10 pm on weekdays, annoy Joe
0 22 * * 1-5	mail -s "It's 10pm" joe%Joe,%%Where are your kids?%
23 0-23/2 * * * echo "run 23 minutes after midn, 2am, 4am ..., everyday"
5 4 * * sun     echo "run at 5 after 4 every sunday"
.fi

.SH SEE ALSO
svcron(8), svcrontab(1)

.SH EXTENSIONS
When specifying day of week, both day 0 and day 7 will be considered Sunday.
BSD and ATT seem to disagree about this.
.PP
Lists and ranges are allowed to co-exist in the same field.  "1-3,7-9" would
be rejected by ATT or BSD cron -- they want to see "1-3" or "7,8,9" ONLY.
.PP
Ranges can include "steps", so "1-9/2" is the same as "1,3,5,7,9".
.PP
Names of months or days of the week can be specified by name.
.PP
Environment variables can be set in the crontab.  In BSD or ATT, the
environment handed to child processes is basically the one from /etc/rc.
.PP
Command output is mailed to the crontab owner (BSD can't do this), can be
mailed to a person other than the crontab owner (SysV can't do this), or
the feature can be turned off and no mail will be sent at all (SysV can't
do this either).

.SH AUTHOR
.nf
Original code by Paul Vixie <vixie@isc.org>,
modified by Manvendra Bhangui <manvendra@indimail.org>
